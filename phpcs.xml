<?xml version="1.0"?>
<ruleset name="PhPgSql">
	<rule ref="./vendor/consistence/coding-standard/Consistence/ruleset.xml">
		<exclude name="Consistence.Exceptions.ExceptionDeclaration.IncorrectExceptionDirectory"/> <!-- We use Exceptions directory, not exceptions -->
		<exclude name="Generic.Arrays.ArrayIndent.CloseBraceIncorrect"/> <!-- Used phpstorm indent -->
		<exclude name="Generic.Arrays.ArrayIndent.KeyIncorrect"/> <!-- Used phpstorm indent -->
		<exclude name="Generic.PHP.LowerCaseConstant.Found"/>
		<exclude name="PEAR.WhiteSpace.ObjectOperatorIndent.Incorrect"/> <!-- Used phpstorm indent -->
		<exclude name="PSR2.ControlStructures.ElseIfDeclaration.NotAllowed"/>
		<exclude name="Squiz.Commenting.FunctionComment.InvalidTypeHint"/> <!-- PHPStan check this-->
		<exclude name="Squiz.Commenting.FunctionComment.MissingParamTag"/>
		<exclude name="Squiz.Commenting.FunctionComment.ParamNameNoMatch"/> <!-- PHPStan check this-->
		<exclude name="Squiz.Scope.MethodScope.Missing"/> <!-- We ignore visibility on interfaces -->
	</rule>

	<rule ref="Generic.ControlStructures.InlineControlStructure.NotAllowed">
		<exclude-pattern>src/Db/Connection.php</exclude-pattern>
	</rule>

	<rule ref="PSR1.Files.SideEffects.FoundWithSymbols">
		<exclude-pattern>tests/*</exclude-pattern>
		<exclude-pattern>benchmarks/*</exclude-pattern>
	</rule>

	<rule ref="PSR2.Methods.FunctionCallSignature.Indent">
		<exclude-pattern>src/Fluent/QueryBuilder.php</exclude-pattern>
	</rule>

	<rule ref="Squiz.WhiteSpace.FunctionSpacing">
		<properties>
			<property name="spacing" type="integer" value="2"/>
			<property name="spacingAfterLast" type="integer" value="1"/>
			<property name="spacingBeforeFirst" type="integer" value="1"/>
		</properties>
	</rule>

	<rule ref="Squiz.WhiteSpace.MemberVarSpacing">
		<properties>
			<property name="spacingBeforeFirst" type="integer" value="0"/>
		</properties>
	</rule>

	<rule ref="Squiz.WhiteSpace.FunctionSpacing.Before">
		<exclude-pattern>tests/bootstrap.php</exclude-pattern>
		<exclude-pattern>benchmarks/boostrap.php</exclude-pattern>
	</rule>

	<rule ref="Squiz.Strings.DoubleQuoteUsage.ContainsVar">
		<exclude-pattern>benchmarks/BasicPhpBenchmark.php</exclude-pattern>
	</rule>

	<rule ref="./vendor/slevomat/coding-standard/SlevomatCodingStandard/ruleset.xml">
		<exclude name="SlevomatCodingStandard.Classes.EmptyLinesAroundClassBraces.NoEmptyLineAfterOpeningBrace"/>
		<exclude name="SlevomatCodingStandard.Classes.SuperfluousExceptionNaming.SuperfluousSuffix"/>
		<exclude name="SlevomatCodingStandard.Commenting.DisallowOneLinePropertyDocComment.OneLinePropertyComment"/>
		<exclude name="SlevomatCodingStandard.ControlStructures.DisallowShortTernaryOperator.DisallowedShortTernaryOperator"/>
		<exclude name="SlevomatCodingStandard.ControlStructures.JumpStatementsSpacing.IncorrectLinesCountBeforeControlStructure"/>
		<exclude name="SlevomatCodingStandard.ControlStructures.NewWithoutParentheses.UselessParentheses"/> <!-- Already used parentheses -->
		<exclude name="SlevomatCodingStandard.ControlStructures.RequireYodaComparison.RequiredYodaComparison"/>
		<exclude name="SlevomatCodingStandard.ControlStructures.RequireMultiLineTernaryOperator.MultiLineTernaryOperatorNotUsed"/>
		<exclude name="SlevomatCodingStandard.Functions.TrailingCommaInCall.MissingTrailingComma"/><!-- PHP 7.3 -->
		<exclude name="SlevomatCodingStandard.Functions.RequireArrowFunction.RequiredArrowFunction"/><!-- PHP 7.4 -->
		<exclude name="SlevomatCodingStandard.Operators.DisallowIncrementAndDecrementOperators.DisallowedPostIncrementOperator"/>
		<exclude name="SlevomatCodingStandard.Operators.DisallowIncrementAndDecrementOperators.DisallowedPostDecrementOperator"/>
		<exclude name="SlevomatCodingStandard.Operators.DisallowIncrementAndDecrementOperators.DisallowedPreIncrementOperator"/>
		<exclude name="SlevomatCodingStandard.Operators.RequireOnlyStandaloneIncrementAndDecrementOperators.PreIncrementOperatorNotUsedStandalone"/>
		<exclude name="SlevomatCodingStandard.PHP.DisallowReference.DisallowedAssigningByReference"/>
		<exclude name="SlevomatCodingStandard.PHP.DisallowReference.DisallowedInheritingVariableByReference"/>
		<exclude name="SlevomatCodingStandard.PHP.DisallowReference.DisallowedPassingByReference"/>
		<exclude name="SlevomatCodingStandard.PHP.RequireExplicitAssertion.RequiredExplicitAssertion"/>
		<exclude name="SlevomatCodingStandard.PHP.UselessParentheses.UselessParentheses"/>
		<exclude name="SlevomatCodingStandard.Namespaces.FullyQualifiedClassNameAfterKeyword"/>
		<exclude name="SlevomatCodingStandard.Namespaces.FullyQualifiedClassNameInAnnotation.NonFullyQualifiedClassName"/>
		<exclude name="SlevomatCodingStandard.Namespaces.FullyQualifiedExceptions.NonFullyQualifiedException"/>
		<exclude name="SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly.PartialUse"/>
		<exclude name="SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly.ReferenceViaFullyQualifiedName"/>
		<exclude name="SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly.ReferenceViaFullyQualifiedNameWithoutNamespace"/>
		<exclude name="SlevomatCodingStandard.Namespaces.UseOnlyWhitelistedNamespaces"/>
		<exclude name="SlevomatCodingStandard.Numbers.RequireNumericLiteralSeparator.RequiredNumericLiteralSeparator"/>
		<exclude name="SlevomatCodingStandard.TypeHints.DisallowMixedTypeHint.DisallowedMixedTypeHint"/>
		<exclude name="SlevomatCodingStandard.TypeHints.TypeHintDeclaration.MissingTraversableParameterTypeHintSpecification"/>
		<exclude name="SlevomatCodingStandard.TypeHints.TypeHintDeclaration.MissingTraversablePropertyTypeHintSpecification"/>
		<exclude name="SlevomatCodingStandard.TypeHints.TypeHintDeclaration.MissingTraversableReturnTypeHintSpecification"/>

		<!-- @hack these don't support "else if" -->
		<exclude name="SlevomatCodingStandard.ControlStructures.EarlyExit"/>
		<exclude name="SlevomatCodingStandard.ControlStructures.RequireTernaryOperator"/>
		<exclude name="SlevomatCodingStandard.ControlStructures.UselessIfConditionWithReturn.UselessIfCondition"/>
		<exclude name="SlevomatCodingStandard.ControlStructures.BlockControlStructureSpacing"/>
		<exclude name="SlevomatCodingStandard.ControlStructures.JumpStatementsSpacing.IncorrectLinesCountBeforeFirstControlStructure"/>
		<exclude name="SlevomatCodingStandard.ControlStructures.JumpStatementsSpacing.IncorrectLinesCountAfterControlStructure"/>
		<exclude name="SlevomatCodingStandard.ControlStructures.JumpStatementsSpacing.IncorrectLinesCountAfterLastControlStructure"/>
	</rule>

	<rule ref="SlevomatCodingStandard.TypeHints.DeclareStrictTypes">
		<properties>
			<property name="newlinesCountBetweenOpenTagAndDeclare" type="int" value="0"/>
			<property name="spacesCountAroundEqualsSign" type="int" value="0"/>
		</properties>
	</rule>

	<rule ref="SlevomatCodingStandard.Variables.UnusedVariable">
		<properties>
			<property name="ignoreUnusedValuesWhenOnlyKeysAreUsedInForeach" type="bool" value="true"/>
		</properties>
	</rule>

	<rule ref="SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint">
		<exclude-pattern>src/Fluent/Complex.php</exclude-pattern>
	</rule>

	<rule ref="SlevomatCodingStandard.Commenting.InlineDocCommentDeclaration.MissingVariable">
		<exclude-pattern>src/Fluent/Complex.php</exclude-pattern>
	</rule>

	<rule ref="SlevomatCodingStandard.Functions.UnusedParameter.UnusedParameter">
		<exclude-pattern>tests/*</exclude-pattern>
	</rule>

	<rule ref="SlevomatCodingStandard.Files.TypeNameMatchesFileName">
		<exclude-pattern>src/*</exclude-pattern>
		<exclude-pattern>tests/*</exclude-pattern>
		<exclude-pattern>benchmarks/*</exclude-pattern>
	</rule>
</ruleset>
